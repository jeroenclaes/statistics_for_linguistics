?tutorial::test_object
head(dataSet[, c("Word", "Freq")])
dataSet <- read_csv("http://www.jeroenclaes.be/statistics_for_linguistics/datasets/class2_balota_et_al_2007.csv")
library(readr)
dataSet <- read_csv("http://www.jeroenclaes.be/statistics_for_linguistics/datasets/class2_balota_et_al_2007.csv")
head(dataSet[dataSet$Mean_RT < 600, ]$Word)
sample(10, dataSet$Word)
sample(dataSet$Word, 10)
sample(dataSet$Word, 5)
dataSet[dataSet$Word %in% c("moneys", "stinger", "spare", "bandage","acorn"), ]$Length
dataSet[dataSet$Word %in% c("moneys", "stinger", "spare", "bandage","acorn"), c("Length", "Freq")]
dataSet$FreqByTwo <- dataSet$Freq/2
dataSet$FreqByTwo <- dataSet$Freq/2
glimpse(dataSet$FreqByTwo)
library(dplyr)
glimpse(dataSet$FreqByTwo)
quantile(dataSet$Freq, c(0.25, 0.5, 0.75))
quantile(dataSet$Freq, c(0.25, 0.5, 0.75)quantile(dataSet$Freq, c(0.25, 0.5, 0.75), na.rm = TRUE)
quantile(dataSet$Freq, c(0.25, 0.5, 0.75), na.rm = TRUE)
median(dataSet$Freq)
mean(dataSet$Freq)
3350.31/310.5
ggplot(dataSet, aes(x=Freq))  + geom_line(stat="density") + geom_vline(aes(xintercept=mean(dataSet$Freq)), color="red")
library(ggplot2)
ggplot(dataSet, aes(x=Freq))  + geom_line(stat="density") + geom_vline(aes(xintercept=mean(dataSet$Freq)), color="red")
qqnorm(dataSet$Freq)
qqline(dataSet$Freq)
(mean(dataSet$Freq)-dataSet$Freq)^2/(nrow(dataSet)-1)
sum((mean(dataSet$Freq)-dataSet$Freq)^2/(nrow(dataSet)-1))
sum((dataSet$Freq-mean(dataSet$Freq))^2/(nrow(dataSet)-1))
sum((dataSet$Freq-mean(dataSet$Freq))^2)/(nrow(dataSet)-1)
sqrt(94743291)
sd(dataSet$Freq)
var(dataSet$Freq)
var(dataSet$Length)
sd(dataSet$Length)
source('~/Desktop/twitterCorpus/code/createFinalDataSet.R')
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded)
table(finalSet$country)
View(finalSet[finalSet$country=="Belgium",])
View(finalSet)
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
nrow(finalSet)
table(finalSet$country)
View(finalSet[finalSet$country=="Uruguay",])
View(finalSet)
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic"), "Caribbean", country))
table(finalSet$country)
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv")
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que buenos|qué ganas|qué buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que linda|que feo|que manera|que lindo|que vieja|que viejo|que bueno|que mala|que buena|que buenas|que lindos|que lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- dataSet %>%
filter(!in_reply_to_status_id_str %in% negativeSet)
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias", grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))
table(finalSet$country)
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at))
finalSet <- finalSet %>%  arrange(c(in_reply_to_status_id_str, desc(created_at)))
finalSet <- finalSet %>%  arrange(in_reply_to_status_id_str, desc(created_at))
class(finalSet$created_at)
head(finalSet$created_at)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=as.POSIXct(created_at, format="%d-%m-%YT%H:%M:%SZ", origin="1970-01-01", tz="UTC"))
head(dataSet$created_at)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%d-%m-%Y %H:%M:%S", origin="1970-01-01", tz="UTC"))
head(dataSet$created_at)
head(dataSet$created_at, 20)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", ""))
head(dataSet$created_at)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%Y-%m-%d %H:%M:%S", origin="1970-01-01", tz="UTC"))
head(dataSet$created_at)
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que buenos|qué ganas|qué buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que linda|que feo|que manera|que lindo|que vieja|que viejo|que bueno|que mala|que buena|que buenas|que lindos|que lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- dataSet %>%
filter(!in_reply_to_status_id_str %in% negativeSet)
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke)", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke |^(@[[:alnum:] ])+que|^(@[[:alnum:] ])+q |^(@[[:alnum:] ])+ke |^(@[[:alnum:] ])+k )", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
table(finalSet$queSentence)
nrow(negativeSet)
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
length(negativeSet)
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
length(negativeSet)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%Y-%m-%d %H:%M:%S", origin="1970-01-01", tz="UTC"))
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- dataSet %>%
filter(!in_reply_to_status_id_str %in% negativeSet)
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke |^(@[[:alnum:] ])+que|^(@[[:alnum:] ])+q |^(@[[:alnum:] ])+ke |^(@[[:alnum:] ])+k )", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia|que delicios|q ganas|que sueno|que sueño|q manera|que vergüenza|q vergüenza|que agradable|que miedo|que carajo|que aburrido|que interesante)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%Y-%m-%d %H:%M:%S", origin="1970-01-01", tz="UTC"))
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia|que delicios|q ganas|que sueno|que sueño|q manera|que vergüenza|q vergüenza|que agradable|que miedo|que carajo|que aburrido|que interesante)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- dataSet %>%
filter(!in_reply_to_status_id_str %in% negativeSet)
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke |^(@[[:alnum:] ])+que|^(@[[:alnum:] ])+q |^(@[[:alnum:] ])+ke |^(@[[:alnum:] ])+k )", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia|que delicios|q ganas|que sueno|que sueño|q manera|que vergüenza|q vergüenza|que agradable|que miedo|que carajo|que aburrido|que interesante|que( [[:alpha:]]+)? bonit)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%Y-%m-%d %H:%M:%S", origin="1970-01-01", tz="UTC"))
negativeSet <- unique(dataSet[grepl("(que tal|que ganas|que( [[:alpha:]]+)? buenos|qué ganas|qué( [[:alpha:]]+)? buenos|que asco|qué asco|que noche|que dia|que tarde|que horas|que mal|que mierda|que mal|que( [[:alpha:]]+)? linda|que( [[:alpha:]]+)? feo|que manera|que( [[:alpha:]]+)? lindo|que( [[:alpha:]]+)? vieja|que( [[:alpha:]]+)? viejo|que( [[:alpha:]]+)? bueno|que( [[:alpha:]]+)? mala|que( [[:alpha:]]+)? buena|que( [[:alpha:]]+)? buenas|que( [[:alpha:]]+)? lindos|que( [[:alpha:]]+)? lindas|que poco|que pocos|que poca|que pocas|que pena|que lastima|que lástima|que frio|que calor|que frío|que ric|que raro|que hermos|que delicia|que delicios|q ganas|que sueno|que sueño|q manera|que vergüenza|q vergüenza|que agradable|que miedo|que carajo|que aburrido|que interesante|que( [[:alpha:]]+)? bonit|que dolor|que porqueria|que porquería)", dataSet$text, perl=TRUE, ignore.case=TRUE), ]$in_reply_to_status_id_str)
dataSet <- dataSet %>%
filter(!in_reply_to_status_id_str %in% negativeSet)
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
# LOGIC
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke |^(@[[:alnum:] ])+que|^(@[[:alnum:] ])+q |^(@[[:alnum:] ])+ke |^(@[[:alnum:] ])+k )", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
View(finalSet)
finalSet <- finalSet %>%
mutate(in_reply_to_text=text[which(id_str==in_reply_to_status_id_str)])
head(finalSet$text[which(finalSet$id_str==finalSet$in_reply_to_status_id_str)])
library(twitteR)
??twitter
??twitteR
library(stringi)
library(dplyr)
library(readr)
library(ggplot2)
library(parallel)
library(ggmap)
# --------------
# Options
# --------------
options(mc.cores=6, scipen = 999, stringsAsFactors = F)
# --------------
# Data
# --------------
dataSet <- read_csv("~/Desktop/twitterCorpus/deliverables/dataSet.csv") %>%
mutate(created_at=stri_replace_all_fixed(created_at, "T", " ")) %>%
mutate(created_at=stri_replace_all_fixed(created_at, "Z", "")) %>%
mutate(created_at=as.POSIXct(created_at, format="%Y-%m-%d %H:%M:%S", origin="1970-01-01", tz="UTC"))
dataSet$geoColumn <- dataSet$geoColumn %>%
stri_replace_all_regex("[^[:alpha:] ]", "") %>%
stri_replace_all_regex("[ ]+", " ") %>%
stri_trans_general(id="latin-ascii") %>%
stri_trans_tolower()
dataSet <- dataSet %>%
mutate(country=ifelse(grepl("(canarias|tenerife|el hierro|el hierro|la palma|la gomera|gran canaria|fuerteventura|lanzarote|santa cruz de tenerife|canaria)", geoColumn, perl=TRUE), "Canarias",ifelse( grepl("(spain|espana|españa|madrid|barcelona|vigo|sevilla|barajas|a coruña|a coruna|toledo|galicia|galiza|gallego|galego|adra|andalucía|valenciana|valencia|andalucia|albacete|zamora|zafra|málaga|malaga|mallorca|menorca|bilbao|vizcaya|guijon|guijón|xixon|xixón|valència|catalunya|catalan|compostela)", geoColumn, perl=TRUE), "Spain", ifelse(grepl("(puerto rico|porto rico|p r|\\bpr\\b|borinquén|borinquen|borinken|borinkén|república dominicana|rep. dominicana|quisqueya|dominican republic|dominican rep|dom rep|r d |dom |cuba|havana|santo domingo|san juan|baranquilla|colombia|panamá|panama|dominicana|venezuela|venezolana|boricua|caribbean|caribe|venezuela|venezolano|aguadilla|barranquilla)", geoColumn, perl=TRUE), "Caribbean", ifelse(grepl("(mexico|méxico|méjico|mejico|monterrey|méx|mex|mx|guanajuato|acapulco|puebla|acatlán|acatlan|acuña|acuna|aguascalientes)", geoColumn, perl=TRUE), "Mexico", ifelse(grepl("(chile|valparaíso|chl|valparaiso)", geoColumn, perl=TRUE), "Chile", ifelse(grepl("(lima|cuzco|cusco|puno|bolivia|potosi|potosí|peru|perú|cali|calí)", geoColumn, perl=TRUE), "Andes",ifelse(grepl("(argentina|mendoza|buenos aires|pampa|ar |\\b(a r g e n t i n a)\\|adrogue|adrogué|agentina|alberdi|cordoba|córdoba|arg )", geoColumn, perl=TRUE), "Argentina",ifelse(grepl("(uruguay|paraguay|montevideo|montevídeo)",perl=TRUE, geoColumn), "Uruguay/Paraguay", ifelse(grepl("(new york|nueva york|\\bny\\b|new orleans|albaquerque|boston|michigan|washington|usa|chicago|west coast|los angeles|palm beach|florida|miami|virginia)", geoColumn, perl=TRUE), "USA", NA))))))))))
geocodes <- read_csv("~/Desktop/twitterCorpus/deliverables/geocodeCache.csv", col_names=c("geoColumn", "country"))
geocoded <- dataSet %>%
filter(!is.na(country))
finalSet <-dataSet %>%
filter(is.na(country)) %>%
select(-country) %>%
left_join(geocodes, by="geoColumn") %>%
bind_rows(geocoded) %>%
filter(!duplicated(id_str))
finalSet <- finalSet %>%
mutate(country=ifelse(country %in% c("Puerto Rico", "Panama", "Dominican Republic", "Venezuela"), "Caribbean", country)) %>%
mutate(country=ifelse(country %in% c("Uruguay", "Paraguay"), "Uruguay/Paraguay", country)) %>%
mutate(country=ifelse(country %in% c("United States"), "USA", country))  %>%
arrange(in_reply_to_status_id_str, desc(created_at)) %>%
mutate(queSentence=ifelse(grepl("(^que |^q |^k |^ke |[[:punct:]]que|[[:punct:]]q |[[:punct:]]k |[[:punct:]]ke |^ que|^ q|^ k |^ ke |[[:punct:]] que|[[:punct:]] q |[[:punct:]] k |[[:punct:]] ke |^(@[[:alnum:] ])+que|^(@[[:alnum:] ])+q |^(@[[:alnum:] ])+ke |^(@[[:alnum:] ])+k )", perl=TRUE, ignore.case=TRUE, text), TRUE, FALSE))
finalSet <- finalSet %>%
mutate(in_reply_to_text=text[which(id_str==in_reply_to_status_id_str)])
finalSet <- finalSet %>%
mutate(in_reply_to_text=ifelse(length(text[which(id_str==in_reply_to_status_id_str)]) > 0, text[which(id_str==in_reply_to_status_id_str)], NA))
View(finalSet)
finalSet <- finalSet %>%
group_by(in_reply_to_status_id_str) %>%
mutate(in_reply_to_text=ifelse(length(text[which(id_str==in_reply_to_status_id_str)]) > 0, text[which(id_str==in_reply_to_status_id_str)], NA))
View(finalSet)
View(finalSet[finalSet$text!=finalSet$in_reply_to_text, ])
bd <- finalSet[finalSet$text!=finalSet$in_reply_to_text, ]
bd <- bd[!is.na(bd$text),]
View(bd)
bd <- bd  %>% group_by(in_reply_to_status_id_str) %>% arrange(desc(created_at))
View(bd)
colnames(bd)
table(bd$country)
